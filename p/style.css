/* 全体のリセットと基本的な設定 */
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    /* 新規追加: CSS変数 --tile-size の初期値を設定（JavaScriptで上書きされる）*/
    /* 新規追加: CSS変数 --board-size-px の初期値を設定（JavaScriptで上書きされる）*/
    --tile-size: 60px;
    --board-size-px: 480px; /* 8 * 60px */
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
    font-family: 'Arial', sans-serif;
    overflow: hidden; /* ボードリロード時のタイルの飛び出しを防ぐ */
}

h1 {
    margin-top: 20px;
    margin-bottom: 20px;
    color: #333;
    font-size: 2em;
}

/* ゲーム情報（タイマーバー）のコンテナ */
#game-info {
    margin-bottom: 15px;
    border-radius: 8px;
    width: 100%;
    max-width: var(--board-size-px); /* CSS変数を使用 */
    text-align: center;
}

/* タイマーバーのコンテナ */
#timer-bar-container {
    width: 100%;
    height: 20px;
    background-color: #ddd;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);
    margin-top: 10px;
}

/* タイマーバー本体 */
#timer-bar {
    height: 100%;
    width: 100%;
    background-color: #4CAF50;
    border-radius: 10px;
    transition: width 1s linear, background-color 0.5s ease-in-out;
    transform-origin: left;
}

#timer-bar.warning {
    background-color: #FFC107;
}

#timer-bar.critical {
    background-color: #DC3545;
}

/* ゲームコンテナ：ボードとオーバーレイをまとめる */
#game-container {
    position: relative;
    width: var(--board-size-px); /* CSS変数を使用 */
    height: var(--board-size-px); /* CSS変数を使用 */
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    border-radius: 8px;
    overflow: hidden;
}

/* ゲームボード（タイルの親）のスタイル */
#game-board {
    display: grid;
    border: 5px solid #333;
    background-color: #eee;
    overflow: hidden;
    /* grid-template-columns, width, height はJavaScriptで設定されます */
}

/* 各動物タイルのスタイル */
.animal-tile {
    width: var(--tile-size); /* CSS変数を使用 */
    height: var(--tile-size); /* CSS変数を使用 */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: calc(var(--tile-size) * 0.6); /* CSS変数を使用してフォントサイズを調整 */
    cursor: pointer;
    box-sizing: border-box;
    border: 1px solid #ccc;
    background-color: #fff;
    user-select: none;

    transition: transform 0.3s ease-out, opacity 0.3s ease-out; 
    transform: scale(1);
    opacity: 1;
    border-radius: 4px;
    position: absolute; /* タイルの位置を absolute にして transform で制御 */
}

/* 選択されたタイルに適用されるスタイル */
.animal-tile.selected {
    border: 3px solid #007bff;
    box-shadow: 0 0 10px rgba(0, 123, 255, 0.7);
    z-index: 10;
}

/* 消えるタイルに適用されるスタイル */
.animal-tile.clearing {
    transform: scale(0);
    opacity: 0;
}

/* ゲームオーバーオーバーレイのスタイル */
#game-over-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 3em;
    font-weight: bold;
    text-shadow: 2px 2px 5px rgba(0,0,0,0.5);
    z-index: 20;
    border-radius: 8px;
}

#game-over-message {
    margin-bottom: 20px;
}

#restart-button {
    padding: 15px 30px;
    font-size: 1.2em;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

#restart-button:hover {
    background-color: #218838;
}

/* 隠すためのクラス */
.hidden {
    display: none !important;
}

/* 新しいタイルが落下してくるためのアニメーション */
.animal-tile.falling {
    /* --board-size-px を使ってアニメーションの開始位置を動的に設定 */
    animation: fallAndAppear 0.5s ease-out forwards;
}

@keyframes fallAndAppear {
    0% {
        transform: translateY(calc(var(--board-size-px) * -1)) scale(0.5); /* ボードの高さ分上から */
        opacity: 0;
    }
    100% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
}

/* タイルが落ちて消えるアニメーション */
.animal-tile.drop-off {
    animation: dropAndFade 0.5s ease-in forwards var(--drop-delay, 0s);
}

@keyframes dropAndFade {
    0% {
        transform: translateY(0);
        opacity: 1;
    }
    100% {
        /* --board-size-px を使ってアニメーションの終了位置を動的に設定 */
        transform: translateY(var(--board-size-px)); /* ボードの高さ分下に落ちる */
        opacity: 0;
    }
}